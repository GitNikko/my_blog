
<%= image_tag("nic-resized.jpg", class: "avatar rounded-circle") %>
<span class="author">Nicholas Hunt, 4th May 2018</span>
<br>
<br>
<h1 class="heading">Social Logins with Omniauth and Rails</h1>
<%= image_tag("socialmedia.png", class: "img-fluid mx-auto d-block") %>
<div class="content">
  <p>In the current times of social media madness its almost mandatory that any modern web application
    provide the option for users to login with their social platform of choice.
    Thankfully Omniauth turns what sounds like a long and tedious task into a simple and easy to use Ruby gem.
    OmniAuth is a library that standardizes multi-provider authentication for web applications.
    This allows us to talk to and retrieve user data from one or more providers while letting Omniauth do
    all the heavy lifting for us.</p>
  <p>In the following example I will be using Omniauth with the OAuth2 Facebook strategy for logging into an
    application with our Facebook credentials. The entire process is extremely simple. First we will route the
    login/signup path of our application to Facebook via Omniauth. Upon a successful login attempt we will
    receive a ‘callback’ from Facebook containing a hash full of the users information including name, email,
    profile picture, access token and more. This guide assumes you have a rails app setup with a User model and
    Sessions controller. For a great tutorial on setting this up, you should check out “The Rails Tutorial”
    by Michael Hartl.</p>
    <hr>
  <p>In order for us to access the Facebook user database we need to integrate the Facebook API into our
    application. We start by obtaining our Facebook API App ID & App Secret from https://developers.facebook.com/ .
    You will need to create a Facebook account if you don’t already have one. Once logged in, create a new app
    under the ‘My Apps’ menu. Then add a web platform with the site URL as: http://localhost:3000/
    (if running your app locally). You will then be assigned an ‘App ID’ and ‘App Secret’ which you will need
    to note down, as these will be required later. Add the ‘Facebook Login’ product to your application and
    add http://localhost:3000/ under “Valid OAuth Redirect URIs” in the settings tab. You will also need to
    add your apps live URL if running in production eg: https://example-app.herokuapp.com/. Change your apps
    status to live by changing the toggle to ‘on’ from the Dashboard screen.</p>
  <p>We then need to add the following gem to gemfile.rb.</p>
<pre><code>gem ‘omniauth-facebook’</code></pre>
  <p>We will also be using the ‘dotenv-rails’ gem to safely protect our Facebook API ID/Secret from publicly
    being displayed in our source code. As this is only relevant in the development/test environments, we
    can add this gem here:</p>
<pre><code>group :development, :test do
  gem ‘dotenv-rails’
end</code></pre>
  <p>Then run:</p>
<pre><code>$ bundle install</pre></code>
  <p>‘Dotenv-rails’ requires us to store all our environment variables in a ‘.env’ file. Create this in
    the main directory of your application using your text editor of choice. Open this file and add the
    following, while obviously replacing the placeholders with the Facebook app id and secret that you had
    previously recorded:</p>
<pre><code>FACEBOOK_ID=&lt;enter your facebook App ID here>
FACEBOOK_SECRET=&lt;enter your facebook App Secret here></pre></code>
  <p>We will then immediately add our ‘.env’ file to ‘.gitignore’ which can be found in the same directory.
    Some text editors may require you to select “show hidden files” under the ‘View’ menu to see this file.</p>
  <p>Omniauth connects with our project via a rack middleware. We can easily set this up by first manually
    creating the following file:</P>
<pre><code>‘config/initializers/omniauth.rb’</pre></code>
  <p>And then add the following code:</p>
<pre><code>OmniAuth.config.logger = Rails.logger

Rails.application.config.middleware.use OmniAuth::Builder do
  provider :facebook, ENV['FACEBOOK_ID'], ENV[‘FACEBOOK_SECRET']
end

OmniAuth.config.on_failure = -> (env) do
  Rack::Response.new(['302 Moved'], 302, 'Location' => env['omniauth.origin'] || "/").finish
end</pre></code>
  <p>Here we have referenced our Facebook ID and Secret while not publicly displaying them in our code
    (ENV['FACEBOOK_ID'], ENV[‘FACEBOOK_SECRET’]). The last section of this code will redirect our request
    back to the request origin or root path (“/“) in the event of a cancelled login request.</P>
  <p>Then add a link to the Facebook login page in our login view:</p>
<pre><code>&lt;%= link_to “Login with Facebook”, “/auth/facebook” %></code></pre>
  <p>Next we will route the response from Facebook (callback) to our sessions controller in the
    ‘config/routes.rb’ file like so:</p>
<pre><code>get '/auth/:provider/callback', to: ‘sessions#create'</pre></code>
  <p>All the Users information is given to us in the hash ‘request.env[“omniauth.auth”]’.
    So we can handle this response in the sessions controller like so:</p>
<pre><code>class SessionsController < ApplicationController

	def create
		auth = request.env["omniauth.auth"]
      		user = User.find_or_create_by_omniauth(auth)
		if user.save
			session[:user_id] = @user.id
			redirect_to root_path
		end
	end
end</pre></code>
  <p>Now we can define the ‘find_or_create_by_omniauth’ class method in the User model like so:</p>
<pre><code>class User < ApplicationRecord
	def self.find_or_create_by_omniauth(auth)
  	oauth_email = auth["info"]["email"]
  	oauth_name = auth[“info"]["name"]
  	self.where(:email => oauth_email, :name => oauth_name).first_or_create do |user|
  			user.password = SecureRandom.hex
    end
  end
end
</pre></code>
  <p>This code makes good use of the ‘where’ and ‘first_or_create’ rails methods.</p>
  <p>And thats it! There are so many other options to that can be added to this process to suit your
    application. Take a look at the example hash below to see what other user data you can play with.</P>
<pre><code>{
  provider: 'facebook',
  uid: '1234567',
  info: {
    email: 'joe@bloggs.com',
    name: 'Joe Bloggs',
    first_name: 'Joe',
    last_name: 'Bloggs',
    image: 'http://graph.facebook.com/1234567/picture?type=square',
    verified: true
  },
  credentials: {
    token: 'ABCDEF...', # OAuth 2.0 access_token, which you may wish to store
    expires_at: 1321747205, # when the access token expires (it always will)
    expires: true # this will always be true
  },
  extra: {
    raw_info: {
      id: '1234567',
      name: 'Joe Bloggs',
      first_name: 'Joe',
      last_name: 'Bloggs',
      link: 'http://www.facebook.com/jbloggs',
      username: 'jbloggs',
      location: { id: '123456789', name: 'Palo Alto, California' },
      gender: 'male',
      email: 'joe@bloggs.com',
      timezone: -8,
      locale: 'en_US',
      verified: true,
      updated_time: '2011-11-11T06:21:03+0000',
      # ...
    }
  }
}</pre></code>
  <p>Enjoy!</p>

</div>
